// 1) D√°n ch√≠nh x√°c URL t·ª´ Apps Script Web App v√†o ƒë√¢y:
const WEB_APP_URL = 'https://script.google.com/macros/s/AKfycbw5dqnvTfMuMPjIkdWapz7HC9k15NiKImjhkMtPa1NymMuvtZcsf9gkfZ4BWtG2q8KkcA/exec';

let isOnDuty = false, timerId = null;

// H√†m g·ª≠i v·ªã tr√≠ v√† show status / debug
async function sendLocation(email, shift) {
  try {
    console.log('‚Üí G·ª≠i to·∫° ƒë·ªô:', email, shift);
    const response = await fetch(WEB_APP_URL, {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify({ email, shift, lat, lon })
    });
    console.log('‚Üê Response status:', response.status);
    const json = await response.json();
    console.log('‚Üê Response JSON:', json);
    return json;
  } catch (err) {
    console.error('üö® Fetch error:', err);
    throw err;
  }
}

document.getElementById('btn').onclick = async () => {
  const email = document.getElementById('email').value.trim();
  const shift = document.getElementById('shift').value;
  const status = document.getElementById('status');
  if (!email) return alert('Vui l√≤ng nh·∫≠p email.');

  // L·∫•y to·∫° ƒë·ªô m·ªõi m·ªói l·∫ßn click
  let lat, lon;
  try {
    status.textContent = '‚è≥ L·∫•y v·ªã tr√≠‚Ä¶';
    const pos = await new Promise((res, rej) =>
      navigator.geolocation.getCurrentPosition(res, rej, {timeout:10000})
    );
    lat = pos.coords.latitude;
    lon = pos.coords.longitude;
    console.log('‚Üí GPS:', lat, lon);
  } catch (e) {
    console.error('üö® L·ªói GPS:', e);
    status.textContent = '‚ùå L·ªói GPS: '+e.message;
    return;
  }

  if (!isOnDuty) {
    // B·∫Øt ƒë·∫ßu ca
    isOnDuty = true;
    document.getElementById('btn').textContent = 'K·∫øt th√∫c ca';
    status.textContent = '‚úÖ ƒê√£ b·∫Øt ƒë·∫ßu ca. G·ª≠i v·ªã tr√≠‚Ä¶';
    try {
      const res = await sendLocation(email, shift, lat, lon);
      status.textContent = res.status==='OK'
        ? '‚úÖ Check-in th√†nh c√¥ng!'
        : '‚ùå L·ªói server: '+(res.message||'');
    } catch (e) {
      status.textContent = '‚ùå L·ªói g·ª≠i check-in';
    }
    // B·∫≠t interval
    timerId = setInterval(async ()=>{
      try {
        const res = await sendLocation(email, shift, lat, lon);
        console.log('*Periodic send*', res);
      } catch {}
    }, 15*60*1000);

  } else {
    // K·∫øt th√∫c ca
    isOnDuty = false;
    document.getElementById('btn').textContent = 'B·∫Øt ƒë·∫ßu ca';
    status.textContent = '‚úÖ ƒê√£ k·∫øt th√∫c ca. G·ª≠i v·ªã tr√≠‚Ä¶';
    clearInterval(timerId);
    try {
      const res = await sendLocation(email, shift, lat, lon);
      status.textContent = res.status==='OK'
        ? '‚úÖ Check-out th√†nh c√¥ng!'
        : '‚ùå L·ªói server: '+(res.message||'');
    } catch (e) {
      status.textContent = '‚ùå L·ªói g·ª≠i check-out';
    }
  }
};
